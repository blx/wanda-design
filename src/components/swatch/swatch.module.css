.Swatch {
  position: relative;
}


.Color {
  block-size: 80px;
  box-shadow: inset 0 0 0 2px rgba(0, 0, 0, 0.05);
  border-radius: env(--radius-4);
  color: hsl(env(--color-support-white));
  background-color: var(--dimmed-1);
  background-image: url('data:image/svg+xml;charset=utf-8,<svg width="12" height="12" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill="black" fill-opacity=".5" d="M0 0h6v6H0zm6 6h6v6H6z"/></svg>');
  background-size: 23px;
  position: relative;

  &::after {
    content: '';
    display: block;
    position: absolute;
    background-color: var(--backgroundColor);
    inset: 0;
  }


  & b {
    background: inherit;
    background-clip: inherit;
    background-clip: text;
    color: transparent;
    filter: invert(1) grayscale(1) contrast(100);
  }
}

.CopyColor.CopyColor {
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.2s;
  background-color: var(--backgroundColor);

  &:hover {
    background-color: var(--backgroundColor);
  }

  @nest .Swatch:is(:hover, :focus-within) & {
    opacity: 1;
    pointer-events: auto;
  }
}

.Values {
  font-family: monospace;
}
